# app.py
import streamlit as st
import hashlib
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv

# .env —Ñ–∞–π–ª–∞–∞—Å environment variable-—É—É–¥—ã–≥ —É–Ω—à–∏—Ö
load_dotenv()

st.set_page_config(page_title="JET App Suite", page_icon="üìä", layout="wide")

# =========================
# üîê Config
# =========================
# –ù—É—É—Ü “Ø–≥–∏–π–Ω MD5 —Ö—ç—à–∏–π–≥ environment variable-–∞–∞—Å —É–Ω—à–∏—Ö
HASH_HEX = os.getenv("JET_APP_HASH", "").strip().lower()

if not HASH_HEX:
    st.error("‚ùå JET_APP_HASH environment variable —Ç–æ—Ö–∏—Ä—É—É–ª–∞–∞–≥“Ø–π –±–∞–π–Ω–∞. –¢–∞ .env —Ñ–∞–π–ª “Ø“Ø—Å–≥—ç–∂, JET_APP_HASH-–∏–π–≥ —Ç–æ—Ö–∏—Ä—É—É–ª–Ω–∞ —É—É.")
    st.stop()

# –ë—Ä—é—Ç—Ñ–æ—Ä—Å—ã–Ω —Ö–∞–º–≥–∞–∞–ª–∞–ª—Ç
MAX_FAILS = 5
LOCK_MINUTES = 3

def _is_locked():
    fails = st.session_state.get("fail_count", 0)
    until = st.session_state.get("lock_until")
    if until and datetime.utcnow() < until:
        return True, (until - datetime.utcnow()).seconds
    if fails >= MAX_FAILS:
        st.session_state["lock_until"] = datetime.utcnow() + timedelta(minutes=LOCK_MINUTES)
        st.session_state["fail_count"] = 0
        return True, LOCK_MINUTES * 60
    return False, 0

def _reset_lock():
    if "fail_count" in st.session_state:
        del st.session_state["fail_count"]
    if "lock_until" in st.session_state:
        del st.session_state["lock_until"]

def check_password() -> bool:
    # ‚úÖ Force logout via URL: ?logout=1
    params = st.query_params
    if params.get("logout") == "1":
        for key in list(st.session_state.keys()):
            del st.session_state[key]
        st.rerun()

    # Already signed in?
    if st.session_state.get("auth_ok"):
        with st.sidebar:
            st.caption("‚úÖ –ù—ç–≤—Ç—ç—Ä—Å—ç–Ω")
            if st.button("üö™ –°–∏—Å—Ç–µ–º—ç—ç—Å –≥–∞—Ä–∞—Ö"):
                for key in list(st.session_state.keys()):
                    del st.session_state[key]
                st.rerun()
        return True

    # Lock state?
    locked, left = _is_locked()
    
    # –ù—ç–≤—Ç—Ä—ç–ª—Ç–∏–π–Ω —Ö—ç—Å–≥–∏–π–≥ —Ç”©–≤–¥ —Ö–∞—Ä—É—É–ª–∞—Ö
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        st.title("JET App Suite")
        st.write("–≠–Ω–¥ –Ω—ç–≤—Ç—ç—Ä—á –±–∞–π–∂ —Ü–∞–∞—à “Ø—Ä–≥—ç–ª–∂–∏–ª–Ω—ç.")

        if locked:
            minutes = left // 60
            seconds = left % 60
            st.error(f"‚è≥ –¢“Ø—Ä —Ç“Ø–≥–∂—ç—ç—Ç—ç–π –±–∞–π–Ω–∞. –î–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ—Ö –±–æ–ª–æ–º–∂ {minutes} –º–∏–Ω {seconds} —Å–µ–∫ –¥–∞—Ä–∞–∞.")
            st.stop()

        with st.form("login", clear_on_submit=True):
            pwd = st.text_input("–ù—É—É—Ü “Ø–≥", type="password")
            ok = st.form_submit_button("–ù—ç–≤—Ç—Ä—ç—Ö")

        if ok:
            # –ù—É—É—Ü “Ø–≥ —à–∞–ª–≥–∞—Ö
            entered_hash = hashlib.md5((pwd or "").encode()).hexdigest().lower()
            if entered_hash == HASH_HEX:
                st.session_state["auth_ok"] = True
                _reset_lock()
                st.rerun()
            else:
                current_fails = st.session_state.get("fail_count", 0) + 1
                st.session_state["fail_count"] = current_fails
                remaining = MAX_FAILS - current_fails
                st.error(f"‚ùå –ë—É—Ä—É—É –Ω—É—É—Ü “Ø–≥ –±–∞–π–Ω–∞. –î–∞—Ä–∞–∞—Ö –æ—Ä–æ–ª–¥–ª–æ–≥–æ: {remaining}")
    
    st.stop()

# =========================
# üß≠ Sidebar Nav
# =========================
def sidebar_nav() -> str:
    with st.sidebar:
        st.markdown("### Pages")
        return st.radio(
            "–•—É—É–¥–∞—Å —Å–æ–Ω–≥–æ—Ö",
            ["–ù“Ø“Ø—Ä", "JET Additional", "JET Statistical"],
            index=0,
            label_visibility="collapsed",
        )

# =========================
# Pages
# =========================
def page_home():
    st.title("JET App Suite")
    st.write("–ó“Ø“Ø–Ω —Ç–∞–ª—ã–Ω Pages —Ö—ç—Å–≥—ç—ç—Å —Å–æ–Ω–≥–æ–æ–¥ –∞–ø–ø–∞–∞ –∞–∂–∏–ª–ª—É—É–ª–Ω–∞ —É—É.")
    with st.expander("–¢–∞–π–ª–±–∞—Ä / Usage", expanded=True):
        st.markdown(
            """
            - –≠–Ω—ç —Ö—É–≤–∏–ª–±–∞—Ä **–Ω—ç–≥ —Ñ–∞–π–ª** (`app.py`) –¥–æ—Ç–æ—Ä—Ö –æ–ª–æ–Ω —Ö—É—É–¥—Å—ã–≥ sidebar-–∞–∞—Å —Å–æ–Ω–≥–æ–∂ —Ö–∞—Ä—É—É–ª–¥–∞–≥.
            - –ù—ç–≤—Ç—Ä—ç–ª—Ç –Ω—å **–±“Ø—Ö —Ö—É—É–¥—Å–∞–Ω–¥** –∂–∏–≥–¥ “Ø–π–ª—á–∏–ª–Ω—ç.
            - –ì–∞—Ä–∞—Ö –±–æ–ª sidebar –¥–∞—Ö—å **"üö™ –°–∏—Å—Ç–µ–º—ç—ç—Å –≥–∞—Ä–∞—Ö"** —Ç–æ–≤—á —ç—Å–≤—ç–ª URL –¥—ç—ç—Ä `?logout=1`.
            - –ê–Ω—Ö–Ω—ã –Ω—É—É—Ü “Ø–≥: `Jet test16`
            """
        )

def page_jet_additional():
    st.header("JET Additional")
    st.info("–≠–Ω–¥ —Ç–∞–Ω—ã 'JET Additional' –∞–ø–ø—ã–Ω –ª–æ–≥–∏–∫/–∫–æ–Ω—Ç–µ–Ω—Ç–∏–π–≥ –±–∞–π—Ä–ª—É—É–ª–Ω–∞.")

def page_jet_statistical():
    st.header("JET Statistical")
    st.info("–≠–Ω–¥ —Ç–∞–Ω—ã 'JET Statistical' –∞–ø–ø—ã–Ω –ª–æ–≥–∏–∫/–∫–æ–Ω—Ç–µ–Ω—Ç–∏–π–≥ –±–∞–π—Ä–ª—É—É–ª–Ω–∞.")

# =========================
# üöÄ Entry
# =========================
def main():
    if not check_password():
        return
    page = sidebar_nav()
    if page == "–ù“Ø“Ø—Ä":
        page_home()
    elif page == "JET Additional":
        page_jet_additional()
    elif page == "JET Statistical":
        page_jet_statistical()
    else:
        page_home()

if __name__ == "__main__":
    main()
