# app.py
import streamlit as st
from pathlib import Path
import  build_full_report_pretty as report  # —Ç–∞–Ω—ã “Ø–Ω–¥—Å—ç–Ω –∫–æ–¥—ã–≥ –¥—É—É–¥–∞–∂ –±–∞–π–Ω–∞

st.set_page_config(page_title="JET Audit Automation", layout="centered")
st.title("üìä JET Audit Automation Report Generator")

st.markdown(
    """
–≠–Ω—ç—Ö“Ø“Ø –∞–ø–ø –Ω—å —Ç–∞–Ω—ã –æ—Ä—É—É–ª—Å–∞–Ω **GL / TB Excel —Ñ–∞–π–ª—É—É–¥–∞–∞—Å**
–∞–≤—Ç–æ–º–∞—Ç –∞—É–¥–∏—Ç–æ—Ä—ã–Ω —Ç–µ—Å—Ç–∏–π–Ω —Ç–∞–π–ª–∞–Ω “Ø“Ø—Å–≥—ç–Ω—ç.
"""
)

# -----------------------------
# File Upload —Ö—ç—Å—ç–≥
# -----------------------------
gl_file = st.file_uploader("GL Excel —Ñ–∞–π–ª –æ—Ä—É—É–ª–Ω–∞ —É—É", type=["xlsx"])
tb_file = st.file_uploader("TB Excel —Ñ–∞–π–ª –æ—Ä—É—É–ª–∂ –±–æ–ª–Ω–æ (–∑–∞–∞–≤–∞–ª –±–∏—à)", type=["xlsx"])

# -----------------------------
# –¢—É—Å–ª–∞—Ö —Ñ—É–Ω–∫—Ü: report –º–æ–¥—É–ª–∏–π–Ω entry-–≥ —É—è–Ω —Ö–∞—Ç–∞–Ω –∞–∂–∏–ª–ª—É—É–ª–∞—Ö
# -----------------------------
ENTRY_CANDIDATES = (
    "main",
    "build",
    "run",
    "generate",
    "generate_report",
    "build_report",
    "start",
)

def run_report_module(report_module, gl_path: Path, tb_path: Path | None, out_path: Path):
    """
    1) –ú–æ–¥—É–ª–∏–π–Ω –Ω–∏–π—Ç–ª—ç–≥ entry –Ω—ç—Ä“Ø“Ø–¥–∏–π–≥ —ç—Ä–∂ —Ö–∞–π–Ω–∞.
    2) –û–ª–¥—Å–æ–Ω callable-–≥ —ç—Ö–ª—ç—ç–¥ (gl, tb, out) –ø–∞—Ä–∞–º–µ—Ç—Ä—Ç—ç–π –¥—É—É–¥–∞–∂ –æ—Ä–æ–ª–¥–æ–Ω–æ.
       –•—ç—Ä—ç–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–π–Ω —Ç–æ–æ —Ç–∞–∞—Ä–∞—Ö–≥“Ø–π –±–æ–ª –ø–∞—Ä–∞–º–µ—Ç—Ä–≥“Ø–π–≥—ç—ç—Ä –¥–∞—Ö–∏–Ω –¥—É—É–¥–Ω–∞.
    3) –•—ç—Ä—ç–≤ callable –æ–ª–¥–æ—Ö–≥“Ø–π –±–æ–ª –æ–π–ª–≥–æ–º–∂—Ç–æ–π –∞–ª–¥–∞–∞ —à–∏–¥–Ω—ç.
    """
    # –ì–ª–æ–±–∞–ª —Ö—É–≤—å—Å–∞–≥—á –∞—à–∏–≥–ª–∞–¥–∞–≥ –∫–æ–¥ –±–∞–π–∂ –±–æ–ª–æ—Ö —Ç—É–ª —É—Ä—å–¥—á–∏–ª–∞–Ω –æ–Ω–æ–æ–Ω–æ
    setattr(report_module, "INPUT_XLSX_GL", gl_path)
    setattr(report_module, "INPUT_XLSX_TB", tb_path if tb_path else gl_path)
    setattr(report_module, "OUTPUT_XLSX", out_path)

    # Entry-–≥ —Ö–∞–π—Ö
    entry_func = None
    for name in ENTRY_CANDIDATES:
        func = getattr(report_module, name, None)
        if callable(func):
            entry_func = func
            break

    if entry_func is None:
        raise AttributeError(
            "all_reports_master_merged –º–æ–¥—É–ª—å–¥ —Ç–æ—Ö–∏—Ä–æ—Ö entry —Ñ—É–Ω–∫—Ü –æ–ª–¥—Å–æ–Ω–≥“Ø–π. "
            "–î–æ–æ—Ä—Ö –Ω—ç—Ä–Ω“Ø“Ø–¥–∏–π–Ω –∞–ª—å –Ω—ç–≥–∏–π–≥ —ç–∫—Å–ø–æ—Ä—Ç–ª–æ–Ω–æ —É—É: "
            + ", ".join(ENTRY_CANDIDATES)
        )

    # –£—è–Ω —Ö–∞—Ç–∞–Ω –¥—É—É–¥–ª–∞–≥–∞
    try:
        return entry_func(gl_path, tb_path or gl_path, out_path)
    except TypeError:
        # –•—ç—Ä—ç–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–π–Ω —Ç–æ–æ ”©”©—Ä –±–æ–ª –ø–∞—Ä–∞–º–µ—Ç—Ä–≥“Ø–π–≥—ç—ç—Ä –æ—Ä–æ–ª–¥—ä—ë
        return entry_func()

# -----------------------------
# Generate Report Button
# -----------------------------
if st.button("‚úÖ –¢–∞–π–ª–∞–Ω “Ø“Ø—Å–≥—ç—Ö"):
    if not gl_file:
        st.error("‚ö† GL —Ñ–∞–π–ª –∑–∞–∞–≤–∞–ª –æ—Ä—É—É–ª–∞—Ö —Ö—ç—Ä—ç–≥—Ç—ç–π.")
    else:
        # –¢“Ø—Ä —Ö–∞–¥–≥–∞–ª–∞–ª—Ç
        gl_path = Path("uploaded_gl.xlsx")
        with open(gl_path, "wb") as f:
            f.write(gl_file.read())

        tb_path = None
        if tb_file:
            tb_path = Path("uploaded_tb.xlsx")
            with open(tb_path, "wb") as f:
                f.write(tb_file.read())

        out_path = Path("final_report.xlsx")

        # –ö–æ–¥–æ–æ –∞–∂–∏–ª–ª—É—É–ª–Ω–∞
        try:
            with st.spinner("‚è≥ –¢–∞–π–ª–∞–Ω “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞..."):
                run_report_module(report, gl_path, tb_path, out_path)

            # –¢–∞—Ç–∞—Ö –ª–∏–Ω–∫ –≥–∞—Ä–≥–∞–Ω–∞
            st.success("‚úî –¢–∞–π–ª–∞–Ω –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø“Ø—Å–≥—ç–ª—ç—ç!")
            with open(out_path, "rb") as f:
                st.download_button(
                    label="üì• –¢–∞–π–ª–∞–Ω —Ç–∞—Ç–∞—Ö",
                    data=f,
                    file_name="JET_Audit_Report.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                )
        except Exception as e:
            st.error("‚ùå –ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞. –î–æ–æ—Ä—Ö –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π–≥ —à–∞–ª–≥–∞–Ω–∞ —É—É.")
            st.exception(e)
